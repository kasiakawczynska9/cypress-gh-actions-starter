name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - name: Run ESLint
        run: npm run lint

  test-changed:
    runs-on: ubuntu-latest
    needs: lint
    outputs:
      ran: ${{ steps.run-changed.outputs.ran }}
      cypress_exit: ${{ steps.run-changed.outputs.cypress_exit }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci

      - name: Get changed spec files
        id: changed
        uses: tj-actions/changed-files@v45
        with:
          files: |
            cypress/e2e/**/*.cy.js

      - name: Run only changed specs (or skip)
        id: run-changed
        continue-on-error: true
        run: |
          if [ -z "${{ steps.changed.outputs.all_changed_files }}" ]; then
            echo "No spec changes. Skipping tests."
            echo "ran=false" >> "$GITHUB_OUTPUT"
            echo "cypress_exit=0" >> "$GITHUB_OUTPUT"
            echo "RAN=false" >> "$GITHUB_ENV"
            echo "CYPRESS_EXIT=0" >> "$GITHUB_ENV"
            exit 0
          fi
          SPECS=$(echo "${{ steps.changed.outputs.all_changed_files }}" | tr ' ' ',')
          echo "Running: $SPECS"
          npx cypress run --spec "$SPECS"; CODE=$?
          echo "cypress_exit=$CODE" >> "$GITHUB_OUTPUT"
          echo "ran=true" >> "$GITHUB_OUTPUT"
          echo "RAN=true" >> "$GITHUB_ENV"
          echo "CYPRESS_EXIT=$CODE" >> "$GITHUB_ENV"
          exit 0

      - name: Build report (robust, always)
        if: ${{ always() }}
        run: |
          set -e
          mkdir -p report

          echo "RAN env: ${RAN:-unset}, CYPRESS_EXIT: ${CYPRESS_EXIT:-unset}"

          echo "== Step A: prefer reporter HTML if present =="
          if [ -f "cypress/reports/test-results.html" ]; then
            cp cypress/reports/test-results.html report/index.html
            echo "Copied cypress/reports/test-results.html -> report/index.html"
            ls -la report
          else
            echo "Reporter HTML not found. Searching for JSONs to merge…"
            JSONS="$(find cypress/reports -type f -name '*.json' -print | tr '\n' ' ' || true)"
            echo "Found JSONs: $JSONS"
            if [ -n "$JSONS" ]; then
              npx mochawesome-merge $JSONS > report/merged.json
              npx marge report/merged.json -f index -o report
              ls -la report
            else
              echo "No HTML/JSON from reporter. Creating fallback page…"
              if [ "${RAN}" = "false" ]; then
                MSG="Brak zmian w plikach testów – ten run nie uruchomił Cypressa."
              else
                MSG="Testy były uruchomione, ale nie wygenerowano artefaktów raportu (sprawdź konfigurację reportera i logi)."
              fi
              printf '%s\n' \
                '<!doctype html>' \
                '<html>' \
                '  <head><meta charset="utf-8"><title>Cypress Report</title></head>' \
                '  <body>' \
                '    <h1>Cypress Report</h1>' \
                "    <p>${MSG}</p>" \
                '  </body>' \
                '</html>' > report/index.html
              ls -la report
            fi
          fi

      - name: Upload Pages artifact (report/)
        if: ${{ always() }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: report

      - name: Mark job failed if Cypress failed
        if: ${{ env.CYPRESS_EXIT != '0' }}
        run: exit 1

  deploy-pages:
    if: ${{ always() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: test-changed
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
