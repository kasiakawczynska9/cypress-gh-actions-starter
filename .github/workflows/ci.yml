name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - name: Run ESLint
        run: npm run lint

  test-changed:
    runs-on: ubuntu-latest
    needs: lint
    outputs:
      ran: ${{ steps.run-changed.outputs.ran }}
      cypress_exit: ${{ steps.run-changed.outputs.cypress_exit }}
      has_report: ${{ steps.mochawesome.outputs.has_reports }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Clean previous reports
        run: rm -rf cypress/reports

      - run: npm ci

      - name: Ensure report CLIs available
        run: |
          npx --yes mochawesome-merge --version
          npx --yes mochawesome-report-generator --version

      - name: Get changed spec files
        id: changed
        uses: tj-actions/changed-files@v45
        with:
          files: |
            cypress/e2e/**/*.cy.js

      - name: Run only changed specs (or skip)
        id: run-changed
        continue-on-error: true
        run: |
          if [ -z "${{ steps.changed.outputs.all_changed_files }}" ]; then
            echo "No spec changes. Skipping tests."
            echo "ran=false" >> "$GITHUB_OUTPUT"
            echo "cypress_exit=0" >> "$GITHUB_OUTPUT"
            echo "RAN=false" >> "$GITHUB_ENV"
            echo "CYPRESS_EXIT=0" >> "$GITHUB_ENV"
            exit 0
          fi
          SPECS=$(echo "${{ steps.changed.outputs.all_changed_files }}" | tr ' ' ',')
          echo "Running: $SPECS"
          npx cypress run --spec "$SPECS"; CODE=$?
          echo "cypress_exit=$CODE" >> "$GITHUB_OUTPUT"
          echo "ran=true" >> "$GITHUB_OUTPUT"
          echo "RAN=true" >> "$GITHUB_ENV"
          echo "CYPRESS_EXIT=$CODE" >> "$GITHUB_ENV"
          exit 0

      - name: Locate mochawesome JSON
        if: ${{ always() }}
        id: mochawesome
        run: |
          shopt -s nullglob
          FILES=(cypress/reports/mochawesome/*.json)
          if [ ${#FILES[@]} -eq 0 ]; then
            echo "has_reports=false" >> "$GITHUB_OUTPUT"
            echo "Found mochawesome JSON files: 0"
          else
            echo "Found mochawesome JSON files: ${#FILES[@]}"
            printf '%s\n' "${FILES[@]}"
            echo "has_reports=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Build CI HTML report
        if: ${{ steps.mochawesome.outputs.has_reports == 'true' }}
        run: |
          set -eo pipefail
          REPORT_ROOT="cypress/reports"
          OUTPUT_DIR="${REPORT_ROOT}/ci"

          mkdir -p "${OUTPUT_DIR}"
          npx mochawesome-merge "${REPORT_ROOT}/mochawesome"/*.json > "${REPORT_ROOT}/mochawesome.json"
          npx mochawesome-report-generator "${REPORT_ROOT}/mochawesome.json" \
            -o "${OUTPUT_DIR}" \
            -f "index" \
            --inline \
            --overwrite
          cp -f "${OUTPUT_DIR}/index.html" "${REPORT_ROOT}/index.html"

      - name: Configure GitHub Pages
        if: ${{ steps.mochawesome.outputs.has_reports == 'true' }}
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact (cypress/reports)
        if: ${{ steps.mochawesome.outputs.has_reports == 'true' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: cypress/reports

      - name: Mark job failed if Cypress failed
        if: ${{ env.CYPRESS_EXIT != '0' }}
        run: exit 1

  deploy-pages:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.test-changed.outputs.has_report == 'true' }}
    needs: test-changed
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
