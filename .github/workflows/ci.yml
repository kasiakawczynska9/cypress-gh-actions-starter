name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - name: Run ESLint
        run: npm run lint

  test-changed:
    runs-on: ubuntu-latest
    needs: lint
    outputs:
      ran: ${{ steps.run-changed.outputs.ran }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci

      - name: Get changed spec files
        id: changed
        uses: tj-actions/changed-files@v45
        with:
          files: |
            cypress/e2e/**/*.cy.js

      - name: Run only changed specs (or skip)
        id: run-changed
        continue-on-error: true
        run: |
          if [ -z "${{ steps.changed.outputs.all_changed_files }}" ]; then
            echo "No spec changes. Skipping tests."
            echo "ran=false" >> "$GITHUB_OUTPUT"
            echo "cypress_exit=0" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          SPECS=$(echo "${{ steps.changed.outputs.all_changed_files }}" | tr ' ' ',')
          echo "Running: $SPECS"
          npx cypress run --spec "$SPECS"; CODE=$?
          echo "cypress_exit=$CODE" >> "$GITHUB_OUTPUT"
          echo "ran=true" >> "$GITHUB_OUTPUT"
          exit 0

      - name: List mochawesome outputs
        if: ${{ always() && steps.run-changed.outputs.ran == 'true' }}
        run: |
          echo "Listing cypress/reports recursively:"
          ls -Rla cypress/reports || true

      - name: Build HTML report (robust)
        if: ${{ always() && steps.run-changed.outputs.ran == 'true' }}
        run: |
          set -e
          mkdir -p report

          echo "1) If reporter produced HTML – copy it"
          if [ -f "cypress/reports/test-results.html" ]; then
            cp cypress/reports/test-results.html report/index.html
            echo "Copied cypress/reports/test-results.html -> report/index.html"
            ls -la report
            exit 0
          fi

          echo "2) If JSONs exist – merge and build HTML"
          JSONS="$(find cypress/reports -type f -name '*.json' -print | tr '\n' ' ' || true)"
          echo "Found JSONs: $JSONS"
          if [ -n "$JSONS" ]; then
            npx mochawesome-merge $JSONS > report/merged.json
            npx marge report/merged.json -f index -o report
            ls -la report
            exit 0
          fi

          echo "3) No HTML and no JSONs – create fallback index.html"
          printf '%s\n' \
            '<!doctype html>' \
            '<html>' \
            '  <head><meta charset="utf-8"><title>Cypress Report</title></head>' \
            '  <body>' \
            '    <h1>Cypress Report</h1>' \
            '    <p>Brak plików raportu (HTML/JSON). Sprawdź konfigurację reportera i logi testów.</p>' \
            '  </body>' \
            '</html>' > report/index.html
          ls -la report

      - name: Upload Pages artifact (report/)
        if: ${{ always() && steps.run-changed.outputs.ran == 'true' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: report

      # (opcjonalnie) Ustaw job jako "failed" jeśli Cypress zwrócił != 0
      - name: Mark job failed if Cypress failed
        if: ${{ steps.run-changed.outputs.ran == 'true' && steps.run-changed.outputs.cypress_exit != '0' }}
        run: exit 1

  deploy-pages:
    if: ${{ always() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: test-changed
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
