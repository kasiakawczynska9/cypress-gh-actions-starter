name: On-Demand Smoke Tests

on:
  workflow_dispatch:
    inputs:
      extraGrep:
        description: 'Optional: dodatkowy grep (np. @login)'
        required: false
        default: ''
  repository_dispatch:
    types: [run-smoke]

jobs:
  smoke:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Clean previous reports
        run: rm -rf cypress/reports

      - run: npm ci

      - name: Ensure report CLIs available
        run: |
          npx --yes mochawesome-merge --version
          npx --yes mochawesome-report-generator --version

      - name: Run Cypress smoke suite
        id: run-smoke
        continue-on-error: true
        env:
          EXTRA_GREP_INPUT: ${{ inputs.extraGrep }}
          EXTRA_GREP_API:   ${{ github.event.client_payload.grep }}
        run: |
          set +e
          # Złóż wzorzec tagów z @ (AND = '+', OR = ',')
          RAW_EXTRA="${EXTRA_GREP_INPUT:-${EXTRA_GREP_API:-}}"
          EXTRA="$(echo "$RAW_EXTRA" | xargs)"
          BASE="@smoke"
          if [ -n "$EXTRA" ]; then
            case "$EXTRA" in @*) : ;; *) EXTRA="@$EXTRA" ;; esac
            GREP="${BASE}+${EXTRA}"     # (OR => "${BASE},${EXTRA}")
          else
            GREP="${BASE}"
          fi
          echo "Running by tags: ${GREP}"

          npx cypress run --env "grepTags=${GREP},grepFilterSpecs=true,grepOmitFiltered=true,grepDebug=true"
          CODE=$?
          set -e
          echo "CYPRESS_EXIT=$CODE" >> "$GITHUB_ENV"
          # nie failuj tutaj – zrobimy to na końcu
          exit 0

      - name: Locate mochawesome JSON
        if: ${{ always() }}
        id: mochawesome
        run: |
          shopt -s nullglob
          FILES=(cypress/reports/mochawesome/*.json)
          if [ ${#FILES[@]} -eq 0 ]; then
            echo "has_reports=false" >> "$GITHUB_OUTPUT"
            echo "Found mochawesome JSON files: 0"
          else
            echo "Found mochawesome JSON files: ${#FILES[@]}"
            printf '%s\n' "${FILES[@]}"
            echo "has_reports=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Build smoke HTML report
        if: ${{ steps.mochawesome.outputs.has_reports == 'true' }}
        run: |
          set -eo pipefail
          REPORT_ROOT="cypress/reports"
          OUTPUT_DIR="${REPORT_ROOT}/smoke"

          mkdir -p "${OUTPUT_DIR}"
          npx mochawesome-merge "${REPORT_ROOT}/mochawesome"/*.json > "${REPORT_ROOT}/mochawesome.json"
          npx mochawesome-report-generator "${REPORT_ROOT}/mochawesome.json" \
            -o "${OUTPUT_DIR}" \
            -f "index" \
            --inline \
            --overwrite
          cp -f "${OUTPUT_DIR}/index.html" "${REPORT_ROOT}/index.html"

      - name: Configure GitHub Pages
        if: ${{ steps.mochawesome.outputs.has_reports == 'true' }}
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact (cypress/reports)
        if: ${{ steps.mochawesome.outputs.has_reports == 'true' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: cypress/reports

      - name: Deploy smoke report to GitHub Pages
        if: ${{ steps.mochawesome.outputs.has_reports == 'true' }}
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Show smoke URL
        if: ${{ steps.mochawesome.outputs.has_reports == 'true' }}
        run: |
          echo "Smoke URL: ${{ steps.deployment.outputs.page_url }}smoke/"
          {
            echo "### Smoke Report"
            echo "- **URL:** ${{ steps.deployment.outputs.page_url }}smoke/"
            if [ -n "${{ inputs.extraGrep }}" ]; then
              echo "- Extra grep: \`${{ inputs.extraGrep }}\`"
            fi
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Mark job failed if Cypress failed
        if: ${{ env.CYPRESS_EXIT != '0' }}
        run: exit 1
