name: Nightly Regression

on:
  schedule:
    - cron: '0 6 * * *'   # codziennie 06:00 UTC (~07:00 PL w zimie/08:00 w lecie)
  workflow_dispatch:       # możliwość ręcznego odpalenia z UI

jobs:
  regression:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci

      # Pełna regresja
      - name: Run full Cypress regression
        id: run-regression
        continue-on-error: true
        run: |
          echo "Running full Cypress test suite..."
          npx cypress run; CODE=$?
          echo "CYPRESS_EXIT=$CODE" >> "$GITHUB_ENV"
          exit 0

      # Zbuduj raport tak jak w CI (HTML -> merge JSON -> fallback)
      - name: Build regression report (robust)
        if: ${{ always() }}
        run: |
          set -e
          mkdir -p report

          if [ -f "cypress/reports/test-results.html" ]; then
            cp cypress/reports/test-results.html report/index.html
          else
            JSONS="$(find cypress/reports -type f -name '*.json' -print | tr '\n' ' ' || true)"
            if [ -n "$JSONS" ]; then
              npx mochawesome-merge $JSONS > report/merged.json
              npx marge report/merged.json -f index -o report
            else
              printf '%s\n' \
                '<!doctype html><html><head><meta charset="utf-8"><title>Cypress Regression</title></head>' \
                '<body><h1>Brak danych raportu (pełna regresja)</h1></body></html>' > report/index.html
            fi
          fi

          # Przenieś pod /regression/ i dołóż root redirect -> /regression/
          mkdir -p report/regression
          mv report/index.html report/regression/index.html

          printf '%s\n' \
            '<!doctype html>' \
            '<html><head><meta charset="utf-8">' \
            '<meta http-equiv="refresh" content="0; url=./regression/">' \
            '<title>Redirecting to /regression/</title></head>' \
            '<body><p>Redirecting to <a href="./regression/">/regression/</a>…</p></body></html>' \
            > report/index.html

          echo "Report tree:"
          find report -maxdepth 2 -type f -print

      # Opublikuj artefakt (zawiera /index.html i /regression/index.html)
      - name: Upload Pages artifact (report/)
        if: ${{ always() }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: report

      # Deploy na GitHub Pages
      - name: Deploy regression report to GitHub Pages
        if: ${{ always() }}
        id: deployment
        uses: actions/deploy-pages@v4

      # Podaj link do raportu
      - name: Show deployed URL in logs & summary
        if: ${{ always() }}
        run: |
          echo "Base Pages URL: ${{ steps.deployment.outputs.page_url }}"
          echo "Regression URL: ${{ steps.deployment.outputs.page_url }}regression/"
          {
            echo "### Nightly Regression Report"
            echo ""
            echo "- Base: ${{ steps.deployment.outputs.page_url }}"
            echo "- **Regression:** ${{ steps.deployment.outputs.page_url }}regression/"
          } >> "$GITHUB_STEP_SUMMARY"


      # Ustaw job na "failed" jeśli Cypress padł (po publikacji raportu)
      - name: Mark job failed if Cypress failed
        if: ${{ env.CYPRESS_EXIT != '0' }}
        run: exit 1
